{"ast":null,"code":"const express = require('express');\nconst cors = require('cors');\nconst path = require('path');\nconst connectDB = require('../../server/config/dbConfig');\nrequire('dotenv').config();\nconst authRoutes = require('../../server/routes/authRoutes');\nconst giftRoutes = require('../../server/routes/giftRoutes');\nconst recommendationRoutes = require('../../server/routes/recommendationRoutes');\nconst app = express();\nconst PORT = process.env.PORT || 5000;\nconnectDB().then(() => console.log(\"Database Connected Successfully\")).catch(err => console.log(\"Database Connection Error: \", err));\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use('/api/auth', authRoutes);\napp.use('/api/gifts', giftRoutes);\napp.use('/api/recommendations', recommendationRoutes);\nif (process.env.NODE_ENV === 'production') {\n  app.use(express.static(path.join(__dirname, '../client/build')));\n  app.get('*', (req, res) => {\n    res.sendFile(path.resolve(__dirname, '../client', 'build', 'index.html'));\n    app.get('/', (req, res) => {\n      res.send('Welcome to the API!');\n    });\n  });\n}\n\n// Error Handling Middleware\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).send('Something broke!');\n});\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});","map":{"version":3,"names":["express","require","cors","path","connectDB","config","authRoutes","giftRoutes","recommendationRoutes","app","PORT","process","env","then","console","log","catch","err","use","json","urlencoded","extended","NODE_ENV","static","join","__dirname","get","req","res","sendFile","resolve","send","next","error","stack","status","listen"],"sources":["/Users/simeonasefa/Downloads/Gift-Guru-main 2/client/src/server.js"],"sourcesContent":["const express = require('express');\nconst cors = require('cors');\nconst path = require('path');\nconst connectDB = require('../../server/config/dbConfig');\nrequire('dotenv').config();\n\nconst authRoutes = require('../../server/routes/authRoutes');\nconst giftRoutes = require('../../server/routes/giftRoutes');\nconst recommendationRoutes = require('../../server/routes/recommendationRoutes');\n\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\nconnectDB()\n  .then(() => console.log(\"Database Connected Successfully\"))\n  .catch((err) => console.log(\"Database Connection Error: \", err));\n\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\napp.use('/api/auth', authRoutes);\napp.use('/api/gifts', giftRoutes);\napp.use('/api/recommendations', recommendationRoutes);\n\nif (process.env.NODE_ENV === 'production') {\n  app.use(express.static(path.join(__dirname, '../client/build')));\n\n  app.get('*', (req, res) => {\n    res.sendFile(path.resolve(__dirname, '../client', 'build', 'index.html'));\n\n    app.get('/', (req, res) => {\n      res.send('Welcome to the API!');\n    });\n    \n  });\n}\n\n// Error Handling Middleware\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).send('Something broke!');\n});\n\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,SAAS,GAAGH,OAAO,CAAC,8BAA8B,CAAC;AACzDA,OAAO,CAAC,QAAQ,CAAC,CAACI,MAAM,CAAC,CAAC;AAE1B,MAAMC,UAAU,GAAGL,OAAO,CAAC,gCAAgC,CAAC;AAC5D,MAAMM,UAAU,GAAGN,OAAO,CAAC,gCAAgC,CAAC;AAC5D,MAAMO,oBAAoB,GAAGP,OAAO,CAAC,0CAA0C,CAAC;AAEhF,MAAMQ,GAAG,GAAGT,OAAO,CAAC,CAAC;AACrB,MAAMU,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AAErCN,SAAS,CAAC,CAAC,CACRS,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAAC,CAC1DC,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEE,GAAG,CAAC,CAAC;AAElER,GAAG,CAACS,GAAG,CAAChB,IAAI,CAAC,CAAC,CAAC;AACfO,GAAG,CAACS,GAAG,CAAClB,OAAO,CAACmB,IAAI,CAAC,CAAC,CAAC;AACvBV,GAAG,CAACS,GAAG,CAAClB,OAAO,CAACoB,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AAE/CZ,GAAG,CAACS,GAAG,CAAC,WAAW,EAAEZ,UAAU,CAAC;AAChCG,GAAG,CAACS,GAAG,CAAC,YAAY,EAAEX,UAAU,CAAC;AACjCE,GAAG,CAACS,GAAG,CAAC,sBAAsB,EAAEV,oBAAoB,CAAC;AAErD,IAAIG,OAAO,CAACC,GAAG,CAACU,QAAQ,KAAK,YAAY,EAAE;EACzCb,GAAG,CAACS,GAAG,CAAClB,OAAO,CAACuB,MAAM,CAACpB,IAAI,CAACqB,IAAI,CAACC,SAAS,EAAE,iBAAiB,CAAC,CAAC,CAAC;EAEhEhB,GAAG,CAACiB,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;IACzBA,GAAG,CAACC,QAAQ,CAAC1B,IAAI,CAAC2B,OAAO,CAACL,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;IAEzEhB,GAAG,CAACiB,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;MACzBA,GAAG,CAACG,IAAI,CAAC,qBAAqB,CAAC;IACjC,CAAC,CAAC;EAEJ,CAAC,CAAC;AACJ;;AAEA;AACAtB,GAAG,CAACS,GAAG,CAAC,CAACD,GAAG,EAAEU,GAAG,EAAEC,GAAG,EAAEI,IAAI,KAAK;EAC/BlB,OAAO,CAACmB,KAAK,CAAChB,GAAG,CAACiB,KAAK,CAAC;EACxBN,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC,kBAAkB,CAAC;AAC1C,CAAC,CAAC;AAEFtB,GAAG,CAAC2B,MAAM,CAAC1B,IAAI,EAAE,MAAM;EACrBI,OAAO,CAACC,GAAG,CAAE,6BAA4BL,IAAK,EAAC,CAAC;AAClD,CAAC,CAAC"},"metadata":{},"sourceType":"module"}